<?php
/*   __________________________________________________
    |  Obfuscated by YAK Pro - Php Obfuscator  2.0.1   |
    |              on 2020-11-30 10:11:22              |
    |    GitHub: https://github.com/pk-fr/yakpro-po    |
    |__________________________________________________|
*/
/*
* Copyright (C) Incevio Systems, Inc - All Rights Reserved
* Unauthorized copying of this file, via any medium is strictly prohibited
* Proprietary and confidential
* Written by Munna Khan <help.zcart@gmail.com>, September 2018
*/
 namespace App\Http\Controllers\Installer\Helpers; class RequirementsChecker { private $_minPhpVersion = "\67\56\62\56\x30"; public function check(array $requirements) { $results = []; foreach ($requirements as $type => $requirement) { switch ($type) { case "\160\150\x70": foreach ($requirements[$type] as $requirement) { $results["\162\145\161\165\151\162\x65\155\145\156\164\x73"][$type][$requirement] = true; if (extension_loaded($requirement)) { goto AzA9d; } $results["\162\145\x71\165\151\x72\x65\155\x65\x6e\x74\x73"][$type][$requirement] = false; $results["\x65\162\162\x6f\x72\163"] = true; AzA9d: BhkFS: } RDnXY: goto QerSj; case "\x61\160\141\x63\x68\145": foreach ($requirements[$type] as $requirement) { if (!function_exists("\141\160\x61\143\150\145\137\147\145\164\137\x6d\157\x64\165\154\145\163")) { goto AnF9u; } $results["\162\x65\x71\x75\x69\x72\145\x6d\x65\x6e\x74\x73"][$type][$requirement] = true; if (in_array($requirement, apache_get_modules())) { goto I1uWh; } $results["\x72\x65\161\165\x69\162\145\155\145\156\x74\x73"][$type][$requirement] = false; $results["\145\162\x72\x6f\x72\163"] = true; I1uWh: AnF9u: Ifk8i: } achN3: goto QerSj; } nLqdb: QerSj: Go5FD: } ApZIC: return $results; } public function checkPHPversion(string $minPhpVersion = null, string $maxPhpVersion = null) { $currentPhpVersion = $this->getPhpVersionInfo(); $supported = false; if (!($minPhpVersion == null)) { goto pU5Fs; } $minPhpVersion = $this->getMinPhpVersion(); pU5Fs: if (!($maxPhpVersion == null)) { goto LN9tp; } $maxPhpVersion = $currentPhpVersion["\166\145\x72\x73\x69\157\156"]; LN9tp: if (!(version_compare($currentPhpVersion["\x76\145\162\163\151\157\156"], $minPhpVersion, "\x3e\x3d") && version_compare($currentPhpVersion["\166\x65\162\163\151\157\x6e"], $maxPhpVersion, "\74\75"))) { goto fIOUR; } $supported = true; fIOUR: $phpStatus = ["\146\x75\x6c\154" => $currentPhpVersion["\146\x75\x6c\x6c"], "\143\165\162\162\145\x6e\x74" => $currentPhpVersion["\166\145\162\163\151\157\156"], "\x6d\151\156\x69\x6d\x75\155" => $minPhpVersion, "\155\141\x78\x69\155\165\x6d" => $maxPhpVersion, "\x73\x75\x70\x70\157\x72\x74\145\144" => $supported]; return $phpStatus; } private static function getPhpVersionInfo() { $currentVersionFull = PHP_VERSION; preg_match("\43\136\134\144\x2b\50\x5c\56\134\x64\x2b\x29\52\x23", $currentVersionFull, $filtered); $currentVersion = $filtered[0]; return ["\x66\x75\x6c\x6c" => $currentVersionFull, "\166\145\162\163\x69\x6f\x6e" => $currentVersion]; } protected function getMinPhpVersion() { return $this->_minPhpVersion; } }
